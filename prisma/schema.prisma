generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoice     invoice[]
  project     project[]
}

model fieldwork_data {
  id                   String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  coordinates          String   @db.VarChar(255)
  elevation            Int
  soil_profile         String   @db.VarChar(255)
  penetrometer_results Int
  job_id               String?  @db.Uuid
  created_at           DateTime @default(now()) @db.Timestamp(6)
  updated_at           DateTime @default(now()) @db.Timestamp(6)
  job                  job?     @relation(fields: [job_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invoice {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount             Int
  status             String   @db.VarChar(50)
  company_id         String?  @db.Uuid
  finance_manager_id String?  @db.Uuid
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  company            company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user               user?    @relation(fields: [finance_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model job {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String           @db.VarChar(255)
  description    String?          @db.VarChar(255)
  project_id     String?          @db.Uuid
  technician_id  String?          @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  fieldwork_data fieldwork_data[]
  project        project?         @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user?            @relation(fields: [technician_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model project {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  company_id  String?  @db.Uuid
  admin_id    String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  job         job[]
  user        user?    @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  company     company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
  invoice     invoice[]
  job         job[]
  project     project[]
}
